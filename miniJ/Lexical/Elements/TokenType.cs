namespace miniJ.Lexical.Elements.Token
{
    public enum TokenType
    {
        AccessModifier_Private,
        AccessModifier_Protected,
        AccessModifier_Public,

        Comparator_And,
        Comparator_Different,
        Comparator_Equal,
        Comparator_GreaterThan,
        Comparator_GreaterThanOrEqual,
        Comparator_Inequality,
        Comparator_LessThan,
        Comparator_LessThanOrEqual,
        Comparator_Or,

        Delimiter_Backslash,
        Delimiter_CBlock,
        Delimiter_CharAssigment,
        Delimiter_CIndex,
        Delimiter_CInstruction,
        Delimiter_Collon,
        Delimiter_Comma,
        Delimiter_CParenthesis,
        Delimiter_Dot,
        Delimiter_EOF,
        Delimiter_OBlock,
        Delimiter_OIndex,
        Delimiter_OParenthesis,
        Delimiter_StringAssigment,
        Delimiter_TwoCollon,

        Directive_Define,
        Directive_ElseIf,
        Directive_EndIf,
        Directive_If,
        Directive_IfDefined,
        Directive_IfNotDefine,
        Directive_Include,
        Directive_ThrowError,
        Directive_UnDef,

        Keyword_Asm,
        Keyword_Auto,
        Keyword_Base,
        Keyword_Break,
        Keyword_Case,
        Keyword_Catch,
        Keyword_Class,
        Keyword_Constant,
        Keyword_Continue,
        Keyword_Default,
        Keyword_Do,
        Keyword_Else,
        Keyword_Enum,
        Keyword_Extern,
        Keyword_False,
        Keyword_For,
        Keyword_Global,
        Keyword_If,
        Keyword_Interface,
        Keyword_Namespace,
        Keyword_New,
        Keyword_Null,
        Keyword_Readonly,
        Keyword_Return,
        Keyword_Signed,
        Keyword_SizeOf,
        Keyword_Struct,
        Keyword_Switch,
        Keyword_This,
        Keyword_True,
        Keyword_Try,
        Keyword_Unsigned,
        Keyword_Using,
        Keyword_Volatile,
        Keyword_While,

        NotDef_Char,
        NotDef_Identifier,
        NotDef_None,
        NotDef_Number,
        NotDef_String,
        NotDef_TypeIdentifier,

        Operator_Add,
        Operator_AddAssign,
        Operator_And,
        Operator_Decrement,
        Operator_Division,
        Operator_Equal,
        Operator_Increment,
        Operator_Or,
        Operator_Power,
        Operator_Sub,
        Operator_SubAssign,

        PrimitiveType_Bool,
        PrimitiveType_Byte,
        PrimitiveType_Char,
        PrimitiveType_Double,
        PrimitiveType_Float,
        PrimitiveType_Int,
        PrimitiveType_Long,
        PrimitiveType_String,
        PrimitiveType_Void,
    }
}